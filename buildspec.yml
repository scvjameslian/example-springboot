version: 0.2
# please check out this for information on how to link cd pipeline for ecs deployment
# https://docs.aws.amazon.com/codepipeline/latest/userguide/ecs-cd-pipeline.html
# please check out build spec docs
# https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html
# https://docs.aws.amazon.com/codebuild/latest/userguide/sample-ecr.html
# incoming parameters from code build
# - TARGET_ACCOUNT_ID
# - CROSS_ACCOUNT_ROLE
# - CF_EXECUTION_ROLE

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
      commands:
        - echo Logging in to Amazon ECR...
        - aws --version
        - REPOSITORY_HOST=$TARGET_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com
        - aws sts get-caller-identity
        - aws ecr get-login-password | docker login --username AWS --password-stdin $REPOSITORY_HOST
        - 
        - REPOSITORY_URI=$REPOSITORY_HOST/services
        - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
        - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - mvn install -DskipTests
      - echo Building the Docker image...          
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest --debug
      # - docker push $REPOSITORY_URI:$IMAGE_TAG
      # - echo Writing image definitions file...
      # - printf '[{"name":"test","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json